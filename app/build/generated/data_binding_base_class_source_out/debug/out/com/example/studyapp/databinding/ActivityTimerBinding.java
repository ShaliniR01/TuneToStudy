// Generated by view binder compiler. Do not edit!
package com.example.studyapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.studyapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTimerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText hourText;

  @NonNull
  public final EditText minuteText;

  @NonNull
  public final Button pauseButton;

  @NonNull
  public final Button resetButton;

  @NonNull
  public final EditText secondsText;

  @NonNull
  public final Spinner spinner;

  @NonNull
  public final Button startButton;

  @NonNull
  public final ImageButton taskButton;

  @NonNull
  public final TextView taskText;

  @NonNull
  public final TextView timerColon1;

  @NonNull
  public final TextView timerColon2;

  @NonNull
  public final View view2;

  private ActivityTimerBinding(@NonNull ConstraintLayout rootView, @NonNull EditText hourText,
      @NonNull EditText minuteText, @NonNull Button pauseButton, @NonNull Button resetButton,
      @NonNull EditText secondsText, @NonNull Spinner spinner, @NonNull Button startButton,
      @NonNull ImageButton taskButton, @NonNull TextView taskText, @NonNull TextView timerColon1,
      @NonNull TextView timerColon2, @NonNull View view2) {
    this.rootView = rootView;
    this.hourText = hourText;
    this.minuteText = minuteText;
    this.pauseButton = pauseButton;
    this.resetButton = resetButton;
    this.secondsText = secondsText;
    this.spinner = spinner;
    this.startButton = startButton;
    this.taskButton = taskButton;
    this.taskText = taskText;
    this.timerColon1 = timerColon1;
    this.timerColon2 = timerColon2;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTimerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTimerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_timer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTimerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.hourText;
      EditText hourText = ViewBindings.findChildViewById(rootView, id);
      if (hourText == null) {
        break missingId;
      }

      id = R.id.minuteText;
      EditText minuteText = ViewBindings.findChildViewById(rootView, id);
      if (minuteText == null) {
        break missingId;
      }

      id = R.id.pauseButton;
      Button pauseButton = ViewBindings.findChildViewById(rootView, id);
      if (pauseButton == null) {
        break missingId;
      }

      id = R.id.resetButton;
      Button resetButton = ViewBindings.findChildViewById(rootView, id);
      if (resetButton == null) {
        break missingId;
      }

      id = R.id.secondsText;
      EditText secondsText = ViewBindings.findChildViewById(rootView, id);
      if (secondsText == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      id = R.id.startButton;
      Button startButton = ViewBindings.findChildViewById(rootView, id);
      if (startButton == null) {
        break missingId;
      }

      id = R.id.taskButton;
      ImageButton taskButton = ViewBindings.findChildViewById(rootView, id);
      if (taskButton == null) {
        break missingId;
      }

      id = R.id.taskText;
      TextView taskText = ViewBindings.findChildViewById(rootView, id);
      if (taskText == null) {
        break missingId;
      }

      id = R.id.timerColon1;
      TextView timerColon1 = ViewBindings.findChildViewById(rootView, id);
      if (timerColon1 == null) {
        break missingId;
      }

      id = R.id.timerColon2;
      TextView timerColon2 = ViewBindings.findChildViewById(rootView, id);
      if (timerColon2 == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new ActivityTimerBinding((ConstraintLayout) rootView, hourText, minuteText,
          pauseButton, resetButton, secondsText, spinner, startButton, taskButton, taskText,
          timerColon1, timerColon2, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
