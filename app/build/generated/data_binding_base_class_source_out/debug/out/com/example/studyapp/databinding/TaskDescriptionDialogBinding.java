// Generated by view binder compiler. Do not edit!
package com.example.studyapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.studyapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TaskDescriptionDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton deleteButton;

  @NonNull
  public final EditText descriptionEditText;

  @NonNull
  public final TextView descriptionTimeText;

  @NonNull
  public final Button dialogButton;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final EditText titleEditText;

  private TaskDescriptionDialogBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton deleteButton, @NonNull EditText descriptionEditText,
      @NonNull TextView descriptionTimeText, @NonNull Button dialogButton,
      @NonNull ImageView imageView2, @NonNull EditText titleEditText) {
    this.rootView = rootView;
    this.deleteButton = deleteButton;
    this.descriptionEditText = descriptionEditText;
    this.descriptionTimeText = descriptionTimeText;
    this.dialogButton = dialogButton;
    this.imageView2 = imageView2;
    this.titleEditText = titleEditText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TaskDescriptionDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TaskDescriptionDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.task_description_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TaskDescriptionDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteButton;
      ImageButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.descriptionEditText;
      EditText descriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionEditText == null) {
        break missingId;
      }

      id = R.id.descriptionTimeText;
      TextView descriptionTimeText = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTimeText == null) {
        break missingId;
      }

      id = R.id.dialogButton;
      Button dialogButton = ViewBindings.findChildViewById(rootView, id);
      if (dialogButton == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.titleEditText;
      EditText titleEditText = ViewBindings.findChildViewById(rootView, id);
      if (titleEditText == null) {
        break missingId;
      }

      return new TaskDescriptionDialogBinding((LinearLayout) rootView, deleteButton,
          descriptionEditText, descriptionTimeText, dialogButton, imageView2, titleEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
